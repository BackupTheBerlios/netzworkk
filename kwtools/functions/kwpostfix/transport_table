# Funktion transport_table{{{
#
transport_table() {
	FILE="$1"
	autoload -U no_adr_msg
	# Variable fÃ¼rs Menue
	lv_Transport=$(gettext 'Transport')

	# Funktion transport_menue{{{
	transport_menue() {
		TRANSPORT_MENU=($lv_Address \"$ADR\" $lv_Transport \"$TRANS\"
		$lv_Server \"$MX_HOST\" $lv_Port \"$PORT\" $gv_Save \"\" $gv_Back \"\")
		if [[ ${#argv} == 1 ]] ; then
			menubox -d "$1" "$TABLE_TITLE" "$gv_Menupoint" "$TRANSPORT_MENU"
		else
			menubox "$TABLE_TITLE" "$gv_Menupoint" "$TRANSPORT_MENU"
		fi
	}
	#}}}
	# Funktion transport_aendern{{{
	transport_aendern() {
		# Funktion no_server_port_msg# {{{
		no_server_port_msg() {
			MSG=$(gettext 'Beim Transportweg \"error\" brauchen Sie keinen Server oder Port angeben.')
			msgbox "$gv_Attention" "$MSG"
		}
		## }}}
	transport_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help "$TAB_HELP"
				transport_menue
				;;
			$lv_Address)
				# Adresse waehlen{{{
				ADRESS_MSG=$(gettext 'Geben Sie entweder eine Mailadresse, Domain, oder Subdomain ein fuer die Postfix Mail annehmen soll (Bsp. domain.de | .subdomain.de).')
				inputbox "$TABLE_TITLE" "$ADRESS_MSG" "$ADR"
				if [ "$gv_Auswahl" ] ; then
					case "$gv_Auswahl" in
						[a-zA-Z0-9]*@*.*)	ADR="$gv_Auswahl"
							;;
						[.a-zA-Z0-9]*.*)	ADR="$gv_Auswahl"
							;;
						*)	unset -- ADR
							no_input_msg
							;;
					esac
				else
					unset -- ADR
					no_input_msg
				fi
				#}}}
				transport_menue $lv_Address
				;;
			$lv_Transport)
				# Transport Methode waehlen{{{
				transport_methode "${TRANS%%:*}" "${TRANS##*:}"
				if [ "$WERT" = error ] ; then
					ERROR_MSG=$(gettext 'Geben Sie einen Text fuer den Transportweg \"error\" ein.')
					inputbox "$TABLE_TITLE" "$ERROR_MSG" "${TRANS#*:}"
					if [ -n "$gv_Auswahl" ] ; then
						TRANS="${WERT}:${gv_Auswahl}"
						unset -- MX_HOST PORT
					else
						unset -- TRANS
					fi
				else
					TRANS="$WERT"
				fi
				#}}}
				transport_menue $lv_Transport
				;;
			$lv_Server)
				# Server eingeben{{{
				if [ "${TRANS%:*}" != error ] ; then
					SERVER_MSG=$(gettext 'Geben Sie hier bitte einen Mail Servernamen ein (Bsp. mx.domain.de | 192.168.0.1).')
					inputbox "$TABLE_TITLE" "$SERVER_MSG" "$MX_HOST"
					if [ "$gv_Auswahl" ] ; then
						case "$gv_Auswahl" in
							\[*\])
								MX_HOST="$gv_Auswahl"
								;;
							*)
								# Server in eckige Klammern stellen?
								SQUARE_BRACKET=$(gettext 'Soll der Rechner ($gv_Auswahl) in eckige Klammern (direkte Einlieferung) gestellt werden?')
								yesno "$TABLE_TITLE" "$SQUARE_BRACKET"
								if [ "$?" = 0 ] ; then
									MX_HOST="[${gv_Auswahl}]"
								else
									MX_HOST="$gv_Auswahl"
								fi
								;;
						esac
					else
						unset -- MX_HOST
						no_input_msg
					fi
				else
					no_server_port_msg
				fi
				#}}}
				transport_menue $lv_Server
				;;
			$lv_Port)
				# Port vergeben{{{
				if [ "${TRANS%:*}" != error ] ; then
					TRANSPORT_PORT_MSG=$(gettext 'Geben Sie hier einen Port fuer den Transport ($TRANS) ein (Bsp. 25).')
					inputbox "$TABLE_TITLE" "$TRANSPORT_PORT_MSG" "$PORT"
					if [ "$gv_Auswahl" ] ; then
						PORT="$gv_Auswahl"
						if [ "$PORT" = 0 ] ; then
							no_input_msg
							unset -- PORT
						fi
					else
						unset -- PORT
						no_input_msg
					fi
				else
					no_server_port_msg
				fi
				#}}}
				transport_menue $lv_Port
				;;
			$gv_Save)
				# Eintraege speichern{{{
				if [ "$ADR" ] ; then
					if [ "$AENDERN_ADR" ] ; then
						if [ "${TRANS%:*}" != error ] ; then
							if [ "$PORT" ] ; then
								sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}:${MX_HOST}:${PORT}#" $FILE >$FILE$$
							else
								sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}:${MX_HOST}#" $FILE >$FILE$$
							fi
						else
							sed -e "s#^${AENDERN_ADR}[[:space:]]${AENDERN_ADR1// /.*}.*#${ADR}\t${TRANS}#" $FILE >$FILE$$
						fi
						mv $FILE$$ $FILE
					else
						grep -v "^${ADR}[[:space:]]" $FILE >$FILE$$
						if [ "${TRANS%:*}" != error ] ; then
							if [ "$PORT" ] ; then
								>> $FILE$$ <<< "$ADR	${TRANS}:${MX_HOST}:${PORT}"
							else
								>> $FILE$$ <<< "$ADR	${TRANS}:${MX_HOST}"
							fi
						else
							>> $FILE$$ <<< "$ADR	$TRANS"
						fi
						mv $FILE$$ $FILE
					fi
					break
				else
					no_adr_msg
					transport_menue
				fi
				#}}}
				;;
			$gv_Back)	break
				;;
		esac
	done
	}
	#}}}
	tabellen_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help tab_help
				tabellen_menue
				;;
			$gv_Display)
				# Ansicht der Eintraege
				tab_ansicht
				tabellen_menue
				;;
			$gv_Create)
				# Werte anlegen
				unset -- PORT MX_HOST ADR TRANS AENDERN_ADR AENDERN_ADR1
				transport_aendern
				tabellen_menue
				;;
			$gv_Change)
				# Eintraege aendern{{{
				key_value "$FILE"
				if [[ -n ${AUSWAHL[1]} ]] ; then
					CHANGE_MENU=($AUSWAHL)
					menubox "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help tabs_help
								menubox "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
								;;
							*)
								# Auswahl aendern
								print "${(s.:.)${gv_Auswahl}}" | \
								while read ADRESSE TRANSP MXHOST REST ; do
									if [ "${TRANSP%:*}" != error ] ; then
										ADR="$ADRESSE"
										TRANS="$TRANSP"
										MX_HOST="$MXHOST"
										if [ -n "$REST" ] ; then
											PORT="$REST"
										else
											unset -- PORT
										fi
										AENDERN_ADR="$ADR"
										# Diese Variablen werden veraendert.
										if [ "$MX_HOST" -a "$PORT" ] ; then
											AENDERN_ADR1="${TRANS}:${MX_HOST}:${PORT}"
										elif [ "$MX_HOST" ] ; then
											AENDERN_ADR1="${TRANS}:${MX_HOST}"
										else
											AENDERN_ADR1="${TRANS}:"
										fi
									else
										ADR="$ADRESSE"
										TRANS="${TRANSP}:${MXHOST} ${REST}"
										AENDERN_ADR="$ADR"
										AENDERN_ADR1="$TRANS"
									fi
								done
								transport_aendern
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue
				;;
			$gv_Delete)	
				# Eintraege loeschen{{{
				key_value "$FILE"
				if [[ -n  ${AUSWAHL_MULTI[1]} ]] ; then
					DEL_MENU=($AUSWAHL_MULTI)
					U_OPT=no
					checklist "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help kwpostfix_del_help
								U_OPT=no
								checklist "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
								;;	
							*)	# Loeschen
								while read ADRESS ; do
									grep -v "^${${${ADRESS// /.*}//\]/\\]}//\[/\\[}" $FILE >$FILE$$
									mv $FILE$$ $FILE
								done < $gv_LogFile$$
								break
								;;
						esac
					done
				else
					no_entry_msg
				fi
				#}}}
				tabellen_menue
				;;
			$lv_Db)
				# Datenbank neu erzeugen und Postfix anweisen
				# die Einstellungen neu einzulesen
				db_new_reread "$WAS_IST" "$FILE"
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
