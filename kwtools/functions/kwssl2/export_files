# Funktion (export_files), exportiert Ca- und Zertifikats-Dateien# {{{
#
# benoetigt die Variablen CERT_EXPORT_TITLE und Export_File
#
# usage: export_files FILE
# FILE - CA/Zertifikat Datei (voller Pfad)
#
export_files() {
	if [[ ${#argv} == 1 ]] ; then
		unset -- Export_File
		Export_File="$1"
		# Funktion (export_filename_format), bestimmt den Dateinamen# {{{
		# der ZielDatei.
		#
		# usage: export_filename_format FILE FORMAT
		# FORMAT - der, pem, pkcs#12, tar, txt, zip
		#
		export_filename_format() {
			if [[ ${#argv} == 2 ]] ; then
				unset -- FORMAT
				if [ -f "$1" ] ; then
					ExportName=${1##*/}
					case "$2" in
						der|pem|p12|tar|txt|zip)
							FORMAT="$2"
							;;
						*)
							;;
					esac
					if [[ $ExportName == cacert.pem ]] ; then
						Export_FileName="${HOME}/${CA_OPEN_NAME}-cert.${FORMAT}"
					else	
						Export_FileName="${HOME}/${MAIL}-cert.${FORMAT}"
					fi
				fi
			else
				no_para_msg $0
			fi
		}
		## }}}
		# Funktion (export_filename), Export Dateinamen eingeben# {{{
		#
		# usage: export_filename [ der | pem | p12 | tar | txt | zip ]
		#
		export_filename() {
			unset -- SUFFIX
			local SUFFIX
			if [[ ${#argv} == 1 ]] ; then
				SUFFIX="$1"
			else
				no_para_msg $0
			fi
			#
			EXPORT_FILENAME_MSG=$(gettext 'Geben Sie den Export Dateinamen mit SUFFIX $SUFFIX ein.')
			inputbox "$lv_ExportFilename" "$EXPORT_FILENAME_MSG" "$Export_FileName"
			if [ -n "$gv_Auswahl" ] ; then
				Export_FileName="$gv_Auswahl"
			fi
		}
		## }}}
		# Funktion (export_menu)# {{{
		export_menu() {
			if [[ ${Export_File##*/} == cacert.pem ]] ; then
				EXPORT_MENU=(PEM \"\" on DER \"\" off TXT \"\" off)
			else
				EXPORT_MENU=(PEM \"\" on DER \"\" off PKCS#12 \"\" off
				TAR \"\" off TXT \"\" off ZIP \"\" off)
			fi
			#
			radiolist "$CERT_EXPORT_TITLE" "$gv_Menupoint" "$EXPORT_MENU"
		}
		## }}}
		# Funktion (check_ca_filenames)# {{{
		check_ca_filenames() {
			unset -- CACERT CAKEY
			if [ "$ExportName" = cacert.pem ] ; then
				CAKEY="${KWSSL_DIR}/${CA_OPEN_NAME}/cacert.key"
				CACERT="${KWSSL_DIR}/${CA_OPEN_NAME}/cacert.pem"
			else
				CAKEY="${KWSSL_DIR}/${CA_OPEN_NAME}/keys/${ExportName%.*}.pem"
				CACERT="${KWSSL_DIR}/${CA_OPEN_NAME}/certs/${ExportName%.*}.pem"
			fi
		}
		## }}}
		export_menu
		while [ -n "$gv_Auswahl" ] ; do
			case $gv_Auswahl in
				HELP*)
		    	    # Hilfe Messagebox
					script_help export_ca_help
					export_menu
					;;
				DER)
					# Zertifikat nach DER exportieren
					#
					# Funktion manage_export_most
					autoload -U manage_export_most
					manage_export_most "$Export_File" der
					break
					;;
				PEM)
					# Zertifikat nach PEM exportieren
					#
					# Funktion manage_export_pem
					autoload -U manage_export_pem
					manage_export_pem "$Export_File" pem
					break
					;;
				PKCS*)
					# Zertifikat nach PKCS#12 exportieren
					#
					# Funktion manage_export_pkcs12
					autoload -U manage_export_pkcs12
					manage_export_pkcs12 "$Export_File" p12
					break
					;;
				TAR)
					# Zertifikat nach TAR exportieren
					#
					# Funktion manage_export_most
					autoload -U manage_export_most
					manage_export_most "$Export_File" tar
					break
					;;
				TXT)
					# Zertifikat nach TXT exportieren
					#
					# Funktion manage_export_most
					autoload -U manage_export_most
					manage_export_most "$Export_File" txt
					break
					;;
				ZIP)
					# Zertifikat nach ZIP exportieren
					#
					# Funktion manage_export_most
					autoload -U manage_export_most
					manage_export_most "$Export_File" zip
					break
					;;
				*)
					break
					;;
			esac
		done
	else
		no_para_msg $0
	fi
}
## }}}
