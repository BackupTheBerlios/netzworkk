# Funktion kwpostfix_action{{{
#
# usage: kwpostfix_action
#
kwpostfix_action() {
	case "$TAB" in
		*access)
			AK_MENU=(all-numeric \"\" BCC \"\" DEFER \"\" DEFER_IF_PERMIT \"\"
				DEFER_IF_REJECT \"\" DISCARD \"\" DUNNO \"\" FILTER \"\"
				HOLD \"\" OK \"\" PREPEND \"\" REDIRECT \"\" REJECT \"\"
				WARN \"\" 4/5XX \"\")
			;;
		*)	
			AK_MENU=(DISCARD \"\" DUNNO \"\" FILTER \"\" HOLD \"\" IGNORE \"\"
				INFO \"\" OK \"\" PREPEND \"\" REDIRECT \"\" REPLACE \"\"
				REJECT \"\" WARN \"\" 4/5XX \"\")
			;;
	esac
	AK_MSG=$(gettext 'Waehlen Sie eine Aktion aus.')
	menubox "$TABLE_TITLE" "$AK_MSG" "$AK_MENU"
	#
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	# Hilfe
				script_help regexp_pcre_action_help
				menubox "$TABLE_TITLE" "$AK_MSG" "$AK_MENU"
				;;
			4*|5*)
				# Fehlercode eingeben
				#
				ERROR_CODE_MSG=$(gettext 'Geben Sie bitte einen Fehlercode, der 4XX oder 5XX Serie ein. Lesen Sie dazu bitte die Hilfe.')
				inputbox "$TABLE_TITLE" "$ERROR_CODE_MSG" "$ACTION"
				if [ -n "$gv_Auswahl" ] ; then
					case "$gv_Auswahl" in
						4[25][0-2]|5[05][0-4])	ACTION="$gv_Auswahl"
							break
							;;
						*)	unset -- ACTION
							no_input_msg
							break
							;;
					esac
				fi
				;;
			all-numeric|[A-Z]*)	# uebernehmen
				ACTION="$gv_Auswahl"
				break
				;;
			*)
				unset -- ACTION
				no_input_msg
				break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
