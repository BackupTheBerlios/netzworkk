#!/bin/zsh
#
# Autor: Kai Wilke  <kiste@netzworkk.de> 11.11.2009
#
# Script: kwxen-tools, Ein Frontend fuer die xen-tools
# Version: 0.0.1

# Ausführen von Befehlen auf bestimmte Signale.
# Notiz. Immer den Namen verwenden, da es auf einigen OS
# eine andere Numerierung geben kann.
#
trap 'setterm -inversescreen off ; setterm -reset ;
rm -rf $gv_Script_Lock $gv_WorkDir &>/dev/null' EXIT INT

gv_ScriptName=${0##*/}

#
# Verzeichniss in denen nach Funktionen gesucht wird
#
if [ -f /usr/local/share/kwtools/functions/sys/script_init ] ; then
	PREFIX=/usr/local
else
	PREFIX=/usr
fi
Script_init_Fpath="${PREFIX}/share/kwtools/functions/sys"
export TEXTDOMAINDIR="${PREFIX}/share/locale"
export TEXTDOMAIN="$gv_ScriptName"

if [ -z ${(M)${FPATH}##*${Script_init_Fpath}*} ] ; then
	FPATH=${Script_init_Fpath}:${FPATH}
fi

#
# script_init enthält die globalen Scripteinstellungen und lädt
# diese automatisch.
#
autoload -U script_init

# Scriptinitialisierung
script_init

# auf Programme pruefen
prog_check dmsetup xm xen-create-image xen-create-nfs xen-delete-image xen-list-images xen-update-image
if [ ! -z "$NO_PROGS" ] ; then
	exit 0
fi

# auf Root pruefen
root_check

# Nachdem das Script initialiiert wurde, kann man die anderen
# benötigten Funktionen laden.
autoload -U kwxen-tools_conf kwxen-tools_config no_vm_msg

if [ -d /etc/xen ] ; then
	XEN_CONF_PATH="/etc/xen"
elif [ -d /usr/local/etc/xen ] ; then
	XEN_CONF_PATH="/usr/local/etc/xen"
fi
if [ -d /etc/xen-tools ] ; then
	XEN_TOOLS_CONF_PATH="/etc/xen-tools"
elif [ -d /usr/local/etc/xen-tools ] ; then
	XEN_TOOLS_CONF_PATH="/usr/local/etc/xen-tools"
fi
if [ -d /usr/lib/xen-tools ] ; then
	XEN_TOOLS_LIB_PATH="/usr/lib/xen-tools"
elif [ -d /usr/local/lib/xen-tools ] ; then
	XEN_TOOLS_LIB_PATH="/usr/local/lib/xen-tools"
fi

# Variablen
Nonactive=$(gettext 'nicht aktiv')
Active=$(gettext 'aktiv')
#
lv_Drives=$(gettext 'Laufwerke')
lv_Start_Stop=$(gettext 'start_stop')

# Funktion vm_display# {{{
vm_display() {
	local Anz
	integer Anz
	unset -- DomU_Drive DomU_Drive_E DomU_Drive_M
	Anz=1
	print -l ${(M)${(f)"$(LC_ALL=C ; xen-list-images)"}##Name:*} | while read a b ; do
		# Auf active/unactive pruefen.
		if [ ! -z "$b" ] ; then
			if xm list $b &>/dev/null ; then
				DomU_Drive[Anz]="$b"
				DomU_Drive_E[Anz]="$b \"$Active\""
				DomU_Drive_M[Anz]="$b \"$Active\" off"
			else
				DomU_Drive[Anz]="$b"
				DomU_Drive_E[Anz]="$b \"$Nonactive\""
				DomU_Drive_M[Anz]="$b \"$Nonactive\" off"
			fi
			(( Anz++ ))
		fi
	done
}
## }}}
# Funktion main_menu# {{{
MAIN_MENU=($gv_Configuration \"\" $lv_Drives \"\" $lv_Start_Stop \"\" $gv_Exit \"\")
#
main_menu() {
	menubox "$gv_Mainmenu" "$gv_Menupoint" "$MAIN_MENU"
}
## }}}
##################################################################
#
# Hauptprogramm
#
##################################################################
#
fs_conf
hw_conf
net_conf
######################################
# muss erstellt werden!
######################################
bootloader_conf
#
os_check
lvm_version
vg_display
main_menu
while [ "$gv_Auswahl" ] ; do
	case $gv_Auswahl in
		HELP*)
    	    # Hilfe Messagebox
			script_help help
			main_menu
			;;
		$gv_Configuration)
			# Standard Konfiguration
			kwxen-tools_conf -g
			main_menu
			;;
		$lv_Drives)
			# Laufwerke erstellen/aendern/loeschen
			# Programme xen-create/delete/list/update-image (create-nfs)
			Vm_DomU=$(gettext 'Virtuelle Maschinen (DomU)')
			autoload -U kwxen-tools_drive_conf
			kwxen-tools_drive_conf
			main_menu
			;;
		$lv_Start_Stop)
			# Virtuelle Maschinen (domU) starten/stoppen# {{{
			vm_display
			if [ -n "$DomU_Drive_M" ] ; then
				START_STOP_TITLE=$(gettext 'Start oder Stop von VM (DomU).')
				START_STOP_MSG=$(gettext 'Waehlen Sie eine oder mehere VM (DomU) aus um Sie zu starten oder zu stoppen.')
				# Funktion, domu_start_stop_menu, VM Auswahl# {{{
				domu_start_stop_menu() {
					START_STOP_MENU=($DomU_Drive_M)
					checklist "$START_STOP_TITLE" "$START_STOP_MSG" "$START_STOP_MENU"
				}
				## }}}
				domu_start_stop_menu
				while [ -n "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help domu_choice_help
							domu_start_stop_menu
							;;
						*)
							# die Auswahl starten oder stoppen
							for i in ${=gv_Auswahl} ; {
								if xm list "$i" &>/dev/null ; then
									xm shutdown -w $gv_Auswahl
								else
									xm create ${XEN_CONF_PATH}/${gv_Auswahl}.cfg
								fi
							}
							#
							vm_display
							domu_start_stop_menu
							;;
					esac
				done
			else
				no_vm_msg
			fi
			## }}}
			main_menu
			;;
		$gv_Exit)	break
			;;
	esac
done	
#
exit 0
