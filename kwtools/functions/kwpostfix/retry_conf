# Retry (Wiederholungen) Konfiguration einstellen{{{

retry_conf() {

	# Variable
	RETRY_TITLE="${gv_Configuration}::${lv_Retry}"
	
	# Bestehende Konfiguration einlesen# {{{
	print -l ${(M)${(f)"$(postconf -c $MAIL_CONFIG)"}##(#s)(retry_|transport_retry_time)*} | \
		sed -e 's#\"#\\\"#g ; s# = #="#g ; s# =#="#g ;
		s#\$#\\\$#g ; s#$#"#g' >${gv_WorkDir}/postfix$$
	read_file -f ${gv_WorkDir}/postfix$$
	rm -rf  ${gv_WorkDir}/postfix$$ &>/dev/null
	## }}}
	# Funktion (conf_retry_menu), die Wiederholungs-Parameter einstellen# {{{
	##############################################
	# TODO: Hilfe etc. vorbereitet
	# retry_delivery_slot_cost = $default_delivery_slot_cost
	# retry_delivery_slot_discount = $default_delivery_slot_discount
	# retry_delivery_slot_loan = $default_delivery_slot_loan
	# retry_destination_concurrency_failed_cohort_limit = $default_destination_concurrency_failed_cohort_limit
	# retry_destination_concurrency_limit = $default_destination_concurrency_limit
	# retry_destination_concurrency_negative_feedback = $default_destination_concurrency_negative_feedback
	# retry_destination_concurrency_positive_feedback = $default_destination_concurrency_positive_feedback
	# retry_destination_rate_delay = $default_destination_rate_delay
	# retry_destination_recipient_limit = $default_destination_recipient_limit
	# retry_extra_recipient_limit = $default_extra_recipient_limit
	# retry_initial_destination_concurrency = $initial_destination_concurrency
	# retry_minimum_delivery_slots = $default_minimum_delivery_slots
	# retry_recipient_limit = $default_recipient_limit
	# retry_recipient_refill_delay = $default_recipient_refill_delay
	# retry_recipient_refill_limit = $default_recipient_refill_limit
	# transport_retry_time = 60s
	##############################################
	conf_retry_menu() {
		RETRY_MENU=(retry_delivery_slot_discount \"\$retry_delivery_slot_discount\"
		retry_delivery_slot_loan \"\$retry_delivery_slot_loan\"
		retry_destination_concurrency_failed_cohort_limit \"\$retry_destination_concurrency_failed_cohort_limit\"
		retry_destination_concurrency_limit \"\$retry_destination_concurrency_limit\"
		retry_destination_concurrency_negative_feedback \"\$retry_destination_concurrency_negative_feedback\"
		retry_destination_concurrency_positive_feedback \"\$retry_destination_concurrency_positive_feedback\"
		retry_destination_rate_delay \"\$retry_destination_rate_delay\"
		retry_destination_recipient_limit \"\$retry_destination_recipient_limit\"
		retry_extra_recipient_limit \"\$retry_extra_recipient_limit\"
		retry_initial_destination_concurrency \"\$retry_initial_destination_concurrency\"
		retry_minimum_delivery_slots \"\$retry_minimum_delivery_slots\"
		retry_recipient_limit \"\$retry_recipient_limit\"
		retry_recipient_refill_delay \"\$retry_recipient_refill_delay\"
		retry_recipient_refill_limit \"\$retry_recipient_refill_limit\"
		transport_retry_time \"\$transport_retry_time\"
		postfix \"reload\"
		$gv_Back \"\")
		if [[ ${#argv} == 1 ]] ; then
			menubox -d "$1" "$RETRY_TITLE" "$gv_Menupoint" "$RETRY_MENU"
		else
			menubox "$RETRY_TITLE" "$gv_Menupoint" "$RETRY_MENU"
		fi
	}
	## }}}
	conf_retry_menu
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)	script_help retry_help
				conf_retry_menu
				;;
			retry_delivery_slot_discount)
				# = $default_delivery_slot_discount
				conf_retry_menu retry_delivery_slot_discount
				;;
			retry_delivery_slot_loan)
				# = $default_delivery_slot_loan
				conf_retry_menu retry_delivery_slot_loan
				;;
			retry_destination_concurrency_failed_cohort_limit)
				# = $default_destination_concurrency_failed_cohort_limit
				conf_retry_menu retry_destination_concurrency_failed_cohort
				;;
			retry_destination_concurrency_limit)
				# = $default_destination_concurrency_limit
				conf_retry_menu retry_destination_concurrency_limit
				;;
			retry_destination_concurrency_negative_feedback)
				# = $default_destination_concurrency_negative_feedback
				conf_retry_menu retry_destination_concurrency_negative_feedback
				;;
			retry_destination_concurrency_positive_feedback)
				# = $default_destination_concurrency_positive_feedback
				conf_retry_menu retry_destination_concurrency_positive_feedback
				;;
			retry_destination_rate_delay)
				# = $default_destination_rate_delay
				conf_retry_menu retry_destination_rate_delay
				;;
			retry_destination_recipient_limit)
				# = $default_destination_recipient_limit
				conf_retry_menu retry_destination_recipient_limit
				;;
			retry_extra_recipient_limit)
				# = $default_extra_recipient_limit
				conf_retry_menu retry_extra_recipient_limit
				;;
			retry_initial_destination_concurrency)
				# = $initial_destination_concurrency
				conf_retry_menu retry_initial_destination_concurrency
				;;
			retry_minimum_delivery_slots)
				# = $default_minimum_delivery_slots
				conf_retry_menu retry_minimum_delivery_slots
				;;
			retry_recipient_limit)
				# = $default_recipient_limit
				conf_retry_menu retry_recipient_limit
				;;
			retry_recipient_refill_delay)
				# = $default_recipient_refill_delay
				conf_retry_menu retry_recipient_refill_delay
				;;
			retry_recipient_refill_limit)
				# = $default_recipient_refill_limit
				conf_retry_menu retry_recipient_refill_limit
				;;
			transport_retry_time)
				# Wartezeit, bevor ein gestoerter Transport erneut angesprochen wird{{{
				# Standard sind 60s
				number_input -s "${transport_retry_time%?}"
				if [ "$NUMBER" ] ; then
					transport_retry_time="$NUMBER"
					postconf -e transport_retry_time="$NUMBER"
				fi
				#}}}
				conf_retry_menu transport_retry_time
				;;
			postfix)
				# postfix, Konfiguration neu einlesen
				postfix_start_reload
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
