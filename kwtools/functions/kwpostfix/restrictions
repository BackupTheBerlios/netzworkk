# Funktion für die Restrictions{{{
#
# allen smtpd_*_restriction stehen unterschiedliche und gleiche Restrictions
# zur Verfügung. Diese werden in den jeweiligen Variablen in der Funktion
# search_restrict festgehalten.
#
# usage: restrictions smtpd_*_restrictions.
#
restrictions() {
	unset -- WERT
	local Anz Anz1 Nr Nr1
	integer Anz Anz1 Nr Nr1
	RESTRICT="$1"
	# Variable fuer die Hilfe
	lv_Restrictions=$(gettext 'Restriktionen')
	#
	# Verfügbare Restrictions{{{
	#
	######################################################################
	# INFO:
	# Restriction: smtpd_relay_restrictions kommt ab Verson 2.10.0 dazu.
	######################################################################
	#
	######################################################################
	# Restrictions die in allen verfuegbaren Restrictions verwendbar sind:
	# check_policy_service Servername/tabelle, defer, defer_if_permit, defer_if_reject,
	# permit, reject_multi_recipient_bounce, reject_plaintext_session,
	# reject_unauth_pipelining, rejject, sleep Sekunde, warn_if_reject
	######################################################################
	# TODO: Funktion extra_conf_restrictions
	# permit_dnswl_client Wert, permit_rhswl_client Wert, reject_rhsbl_reverse_client Wert,
	##########################################
	# reject_unknown_client_hostname, reject_unknown_reverse_client_hostname,
	# reject_plaintext_session,
	##########################################
	# TODO: Funktion extra_conf_restrictions
	# sleep Sekunden
	##########################################
	#
	# smtpd_helo_restrictions:
	# reject_invalid_helo_hostname, reject_non_fqdn_helo_hostname, reject_rhsbl_helo
	##########################################
	# TODO: Funktion extra_conf_restrictions
	# reject_rhsbl_helo Wert
	##########################################
	#
	# smtpd_recipient_restrictions:
	# defer_unauth_destination, reject_unlisted_recipient, reject_unverified_recipient
	#
	######################################################################
	# TODO: ueberhaupt
	# check_policy_service Servername/tabelle (unix:/path/to/server, inet:127.0.0.1:Port
	######################################################################
	#
	#
	# Verfuegbare Werte
	#
	# smtpd_client_restrictions: generic, smtpd_helo_restrictions,
	# 		smtpd_recipient_restrictions, smtpd_sender_restrictions
	# smtpd_data_restrictions: generic, smtpd_client_restrictions, smtpd_helo_restrictions
	# 		smtpd_recipient_restrictions, smtpd_sender_restrictions
	# smtpd_end_of_data_restrictions: generic, smtpd_client_restrictions, smtpd_helo_restrictions
	# 		smtpd_recipient_restrictions, smtpd_sender_restrictions
	# smtpd_etrn_restrictions: generic, smtpd_client_restrictions, smtpd_helo_restrictions
	# smtpd_helo_restrictions: generic, smtpd_client_restrictions,
	#       smtpd_recipient_restrictions, smtpd_sender_restrictions
	# smtpd_recipient_restrictions: generic, smtpd_client_restrictions, smtpd_helo_restrictions,
	# 		smtpd_sender_restrictions
	# smtpd_sender_restrictions: generic,  smtpd_client_restrictions,
	#       smtpd_helo_restrictions, smtpd_recipient_restrictions,
	#
#	R0="check_ccert_access"
#	R0="check_client_access"
#	R2="check_client_mx_access"
#	R3="check_client_ns_access"
#	R1="check_helo_access"
#	R2="check_helo_mx_access"
#	R3="check_helo_ns_access"
#	R4="check_recipient_access"
#	R5="check_recipient_mx_access"
#	R6="check_recipient_ns_access"
#	R0="check_reverse_client_access"
#	R2="check_reverse_client_mx_access"
#	R3="check_reverse_client_ns_access"
#	R7="check_sender_access"
#	R8="check_sender_mx_access"
#	R9="check_sender_ns_access"
#	R10="defer"
#	R11="defer_if_permit"
#	R12="defer_if_reject"
#	R13="permit"
#	R14="permit_auth_destination"
#	R15="permit_mx_backup"
#	R16="permit_mynetworks"
#	R18="permit_sasl_authenticated"
#	R19="permit_tls_all_clientcerts"
#	R20="permit_tls_clientcerts"
#	R21="reject"
#	R22="reject_auth_destination"
#	R23="reject_authenticated_sender_login_mismatch"
#	R24="reject_invalid_helo_hostname"
#	R25="reject_multi_recipient_bounce"
#	R26="reject_non_fqdn_client_hostname"
#	R26="reject_non_fqdn_helo_hostname"
#	R27="reject_non_fqdn_recipient"
#	R28="reject_non_fqdn_sender"
#	R29="reject_rbl_client"
#	R30="reject_rhsbl_client"
#	R31="reject_rhsbl_recipient"
#	R32="reject_rhsbl_sender"
#	R33="reject_sender_login_mismatch"
#	R34="reject_unknown_client_hostname"
#	R35="reject_unauth_destination"
#	R36="reject_unauth_pipelining"
#	R37="reject_unauthenticated_sender_login_mismatch"
#	R38="reject_unknown_client_hostname"
#	R39="reject_unknown_helo_hostname"
#	R40="reject_unknown_recipient_domain"
#	R41="reject_unknown_sender_domain"
#	R42="reject_unlisted_sender"
#	R43="reject_unverified_sender"
#	R44="warn_if_reject"
	#
	R_CLIENT=(reject_unauth_pipelining warn_if_reject check_client_access
		reject_unauthenticated_sender_login_mismatch permit_sasl_authenticated
		permit_auth_destination permit_tls_all_clientcerts permit_tls_clientcerts
		permit_mynetworks reject_rbl_client reject_rhsbl_client reject permit defer)
	R_DATA=(reject_unauth_pipelining warn_if_reject check_client_access
		reject_unauthenticated_sender_login_mismatch permit_sasl_authenticated
		permit_auth_destination permit_tls_all_clientcerts permit_tls_clientcerts
		permit_mynetworks reject_rbl_client reject_rhsbl_client reject permit defer)
	R_END_OF_DATA=(reject_unauth_pipelining warn_if_reject check_client_access
		reject_unauthenticated_sender_login_mismatch permit_sasl_authenticated
		permit_auth_destination permit_tls_all_clientcerts permit_tls_clientcerts
		permit_mynetworks reject_rbl_client reject_rhsbl_client reject permit defer)
	R_ETRN=(reject_unauth_pipelining warn_if_reject check_client_access
		reject_unauthenticated_sender_login_mismatch permit_sasl_authenticated
		permit_auth_destination permit_tls_all_clientcerts permit_tls_clientcerts
		permit_mynetworks reject_rbl_client reject_rhsbl_client reject permit defer)
	R_HELO=(reject_unauth_pipelining warn_if_reject check_client_access
		permit_sasl_authenticated permit_auth_destination permit_tls_all_clientcerts
		permit_tls_clientcerts check_helo_access check_helo_mx_access
		check_helo_ns_access reject_unknown_client_hostname
		reject_unauthenticated_sender_login_mismatch check_non_fqdn_client_hostname
		reject_invalid_helo_hostname permit_mynetworks reject_rbl_client
		reject_rhsbl_client reject permit defer)
	R_RECIPIENT=(reject_unauth_pipelining warn_if_reject check_sender_access
		check_sender_mx_access check_sender_ns_access check_recipient_access
		check_recipient_mx_access check_recipient_ns_access check_client_access
		permit_sasl_authenticated permit_auth_destination permit_tls_all_clientcerts
		permit_tls_clientcerts check_helo_access check_helo_mx_access check_helo_ns_access
		reject_unknown_recipient_domain reject_unknown_helo_hostname
		reject_unknown_client_hostname check_non_fqdn_sender check_non_fqdn_recipient
		check_non_fqdn_client_hostname reject_invalid_helo_hostname permit_mynetworks
		permit_mx_backup reject_rbl_client reject_rhsbl_client reject_rhsbl_recipient
		reject_rhsbl_sender reject_unauth_destination reject permit defer)
	R_RELAY=(reject_unauth_pipelining permit_mynetworks reject) # TODO (alle Restrictions):
	R_SENDER=(reject_unauth_pipelining warn_if_reject check_sender_access
		check_sender_mx_access check_sender_ns_access check_client_access
		permit_sasl_authenticated permit_auth_destination permit_tls_all_clientcerts
		permit_tls_clientcerts check_helo_access check_helo_mx_access
		check_helo_ns_access reject_unknown_recipient_domain reject_unknown_client_hostname
		reject_unauthenticated_sender_login_mismatch check_non_fqdn_sender
		check_non_fqdn_client_hostname reject_invalid_helo_hostname permit_mynetworks
		reject_rbl_client reject_rhsbl_client reject_rhsbl_sender reject permit defer)
	#}}}
	#
	# Funktion restrictions_auswahl{{{
	#
	restrictions_auswahl() {
		unset -- gv_Auswahl
		local OldVar
		OldVar="$1"
		RESTRICT_TITLE=$(gettext 'Konfiguration::Restrictions')
		RESTRICT_MSG=$(gettext 'Waehlen Sie Ihre Restrictions aus.')
		checklist "$RESTRICT_TITLE" "$RESTRICT_MSG" "$VALUE_ARRAY" "$OldVar"
		#
		while [ -n "$gv_Auswahl" ] ; do
			case "$gv_Auswahl" in
				HELP*)	script_help restrictions_help
					checklist "$RESTRICT_TITLE" "$RESTRICT_MSG" "$VALUE_ARRAY" "$OldVar"
					;;
				*)	# Wert übernehmen und zur weiteren Bearbeitung in restrictions eintragen
					rm -rf "${gv_WorkDir}/restrictions" &>/dev/null
					for i in ${=gv_Auswahl} ; {
						if [ -f "${gv_WorkDir}/restrictions" ] ; then
							>> "${gv_WorkDir}/restrictions" <<< "$i"
						else
							> "${gv_WorkDir}/restrictions" <<< "$i"
						fi
					}
					break
					;;
			esac
		done
	}
	#}}}
	# Bei manchen Restrictions müssen extra Einstellungen{{{
	# gemacht werden.
	########################################################
	# TODO: Umschreiben, erweitern
	########################################################
	#
	extra_conf_restrictions() {
	while read a ; do
		case $a in
			check_*_access)
				# Angabe der Tabelle und Tabellentyp fuer bestimmte Restrictions.# {{{
				# Tabellen:
				# check_ccert_access, check_client_access, check_client_mx_access,
				# check_client_ns_access, check_helo_access, check_helo_mx_access,
				# check_helo_ns_access, check_recipient_access, check_recipient_mx_access,
				# check_recipient_ns_access, check_reverse_client_hostname_access,
				# check_reverse_client_hostname_mx_access,
				# check_reverse_client_hostname_ns_access, 
				# check_sender_access, check_sender_mx_access,
				# check_sender_ns_access
				#
				tab_support_choice "$a"
				if [[ -n $MAPS ]] ; then
					sed -e "s#^${a}.*#${a} $MAPS#" ${gv_WorkDir}/restrictions \
						> ${gv_WorkDir}/restrictions$$
				else
					print -l ${(R)${(f)"$(< ${gv_WorkDir}/restrictions)"}#${a} *} \
						> ${gv_WorkDir}/restrictions$$
				fi
				mv ${gv_WorkDir}/restrictions$$ ${gv_WorkDir}/restrictions
				## }}}
				;;
			permit_mx_backup)
				# Nachricht das man permit_mx_backup_networks in /etc/main.cf
				# belegen kann.
				MSG=$(gettext 'Bei permit_mx_backup kann optional die Restriction permit_mx_backup_networks belegt werden (Hauptkonfiguration).')
				msgbox "$gv_Info" "$MSG"
				;;
			reject_rbl_*|reject_rhsbl_*|permit_dnswl_*|permit_rhswl_*)
				# Liste von RBL (Realtime Blackhole Lists) und{{{
				# RHSBL (Right-Hand Sided Blacklisted) domains
				Rbl_Name="$a"
				RBL_MSG=$(gettext 'Geben Sie bitte ein oder mehrere RBL, RHSBL, DNSWL oder RHSWL Domains, getrennt durch ein Leerzeichen, ein (Bsp. relays.ordb.org, list.dsbl.org=1.2.3.4)')
				inputbox "$gv_Configuration" "$RBL_MSG" "$RBL"
				#
				# Prüfen, ob alle Adressen getrennt durch ein Komma
				# sind.
				if [ -n "$gv_Auswahl" ] ; then
					unset -- RBL
					for i in $gv_Auswahl ; {
						case $i in
							[a-zA-Z0-9]*[a-zA-Z0-9-_.]*.[a-z]*)
								RBL+=( $i )
								;;
							*)	
								no_input_msg
								break
								;;
						esac
					}
				else
					unset -- RBL
					no_input_msg
				fi
				#
				# Gibts es RBL (Realtime Blackhole Lists) domains, werden sie hier
				# korrect in die Restrictions eingetragen
				#
				if [ -n "${RBL[1]}" ] ; then
					Nr=${$(grep -n $Rbl_Name ${gv_WorkDir}/restrictions)%:*}
					(( Nr1=Nr+1 ))
					sed -n -e "${Nr1},\$p" ${gv_WorkDir}/restrictions >${gv_WorkDir}/restrictions1
					sed -e "${Nr},\$d" ${gv_WorkDir}/restrictions >${gv_WorkDir}/restrictions$$
					for i in ${=RBL} ; {
						>> ${gv_WorkDir}/restrictions$$ <<< "$Rbl_Name $i"
					}
					< ${gv_WorkDir}/restrictions1 >> ${gv_WorkDir}/restrictions$$
					mv ${gv_WorkDir}/restrictions$$ ${gv_WorkDir}/restrictions
					rm ${gv_WorkDir}/restrictions1 &>/dev/null
				fi
				#}}}
				;;
			*)
				hier_ist_noch_nichts "$extra_conf_restrictions"
				;;
		esac
	done < "${gv_WorkDir}/restrictions"
	}
	#}}}
	# Funktion restrictions_to_maincf{{{
	#
	restrictions_to_maincf() {
		Anz=1
		Anz1=$(wc -l < ${gv_WorkDir}/restrictions)
		if [ "$Anz" -lt "$Anz1" ] ; then
			# Wert der 1. Zeile herausfinden
			WERT="$(sed -n -e "${Anz}p" ${gv_WorkDir}/restrictions)"
			# 1. Zeile loeschen und den Wert in den Restrictions einfuegen
			sed -e "${Anz}d" ${gv_WorkDir}/restrictions >${gv_WorkDir}/restrictions1
			postconf -e $RESTRICT="${WERT},"
			# Zeilennummer der Restrictions in main.cf herausfinden
			LINE=${${(s,:,)$(grep -n "^$RESTRICT" $MAIN_CF)}[1]}
			(( LINE=LINE+1 ))
			# Alle Zeilen ab der Restrictions, in der main.cf kopieren und
			# dann loeschen.
			sed -n -e "${LINE},\$p"  $MAIN_CF >${gv_WorkDir}/maincf$$
			sed -e "${LINE},\$d"  $MAIN_CF >$MAIN_CF$$
			# Die restlichen Restrictions, mit Komma, einfuegen, ausser
			# die letzte.
			while read a ; do
				(( Anz++ ))
				if [ "$Anz" -lt "$Anz1" ] ; then
					>> $MAIN_CF$$ <<< "		${a},"
				else
					>> $MAIN_CF$$ <<< "		${a}"
				fi
			done < ${gv_WorkDir}/restrictions1
			# Alles wieder zusammenbauen
			mv $MAIN_CF$$ $MAIN_CF
			< ${gv_WorkDir}/maincf$$ >> $MAIN_CF
		else
			WERT=$(< ${gv_WorkDir}/restrictions) 
			postconf -e $RESTRICT="$WERT"
		fi
	}
	#}}}
	case "$RESTRICT" in
		smtpd_client_*)
			# smtpd_client_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_CLIENT"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_client_restrictions="$WERT"
			else
				smtpd_client_restrictions=""
				postconf -e smtpd_client_restrictions=""
			fi
			#}}}
			;;
		smtpd_data_*)
			# smtpd_data_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_DATA"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_data_restrictions="$WERT"
			else
				smtpd_data_restrictions=""
				postconf -e smtpd_data_restrictions=""
			fi
			#}}}
			;;
		smtpd_end_*)
			# smtpd_end_of_data_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_END_OF_DATA"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_end_of_data_restrictions="$WERT"
			else
				smtpd_end_of_data_restrictions=""
				postconf -e smtpd_end_of_data_restrictions=""
			fi
			#}}}
			;;
		smtpd_etrn_*)
			# smtpd_etrn_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_ETRN"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_etrn_restrictions="$WERT"
			else
				smtpd_etrn_restrictions=""
				postconf -e smtpd_etrn_restrictions=""
			fi
			#}}}
			;;
		smtpd_helo_*)
			# smtpd_helo_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_HELO"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_helo_restrictions="$WERT"
			else
				smtpd_helo_restrictions=""
				postconf -e smtpd_helo_restrictions=""
			fi
			#}}}
			;;
		smtpd_recipient_*)
			# smtpd_recipient_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_RECIPIENT"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_recipient_restrictions="$WERT"
			else
				smtpd_recipient_restrictions=""
				postconf -e smtpd_recipient_restrictions=""
			fi
			#}}}
			;;
		smtpd_relay_*)
			# smtpd_relay_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_RELAY"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_relay_restrictions="$WERT"
			else
				smtpd_relay_restrictions=""
				postconf -e smtpd_relay_restrictions=""
			fi
			#}}}
			;;
		smtpd_sender_*)
			# smtpd_sender_restrictions{{{
			#
			# vorhandene Werte als "on" markieren.
			OldVar="${$(postconf -h -c $MAIL_CONFIG $RESTRICT)//,/}"
			generate_is_file "$OldVar"
			is_value "$R_SENDER"
			# Auswahl
			restrictions_auswahl "$OldVar"
			if [ -f "${gv_WorkDir}/restrictions" ] ; then
				extra_conf_restrictions
				# Restrictions in die Konfiguration schreiben
				restrictions_to_maincf
				WERT="${$(postconf -h $RESTRICT)//,/}"
				smtpd_sender_restrictions="${WERT}"
			else
				smtpd_sender_restrictions=""
				postconf -e smtpd_sender_restrictions=""
			fi
			#}}}
			;;
	esac
	rm -rf ${gv_WorkDir}/restrictions* &>/dev/null
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
