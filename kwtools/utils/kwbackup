#!/bin/zsh
#
# Autor: Kai Wilke <kiste@netzworkk.de>, 13.04.2011
#
# kwbackup: backupscript für Home und / Verzeichnisse.
#
# Version: 0.1.9

trap 'setterm -inversescreen off ; setterm -reset ;
rm -rf $gv_WorkDir ${TMP_PATH}/${gv_ScriptName}.lock &>/dev/null' EXIT INT

gv_ScriptName=${0##*/}

#
# Verzeichniss in denen nach Funktionen gesucht wird
#
if [ -f /usr/local/share/kwtools/functions/sys/script_init ] ; then
	PREFIX=/usr/local
else
	PREFIX=/usr
fi
Script_init_Fpath="${PREFIX}/share/kwtools/functions/sys"
export TEXTDOMAINDIR="${PREFIX}/share/locale"
export TEXTDOMAIN="$gv_ScriptName"

if [ -z ${(M)${FPATH}##*${Script_init_Fpath}*} ] ; then
	FPATH=${Script_init_Fpath}:${FPATH}
fi

# script_init enthält die globalen Scripteinstellungen und lädt
# diese automatisch.
#
autoload -U script_init

# Scriptinitialisierung
script_init

# Konfigurationsdatei einlesen.
read_file kwbackuprc

# Variablen
Date="`date +%d.%m.%Y`"
ACTION_TITLE=$(gettext 'Ausfuehrung')
DIR_MSG=$(gettext 'Vollstaendige Sicherung des Verzeichnis "$i".')
DIR_LAST_MSG=$(gettext 'Sicherung der Dateien die sich in den letzten 7 Tagen geaendert/angelegt worden sind, vom Verzeichnis "$i".')
lv_Backup=$(gettext 'Backup')
lv_Backup_Sys=$(gettext 'System_Backup')

# Sind die Backup Verzeichnisse noch nicht angelegt wird es jetzt getan.{{{
#
check_backup_dir() {
	create_file -d "${BACKUP_PATH}/dirs" "${BACKUP_PATH}/sys"
}
#}}}
if [ "$UID" = 0 ] ; then
	create_file ${TMP_PATH}/${gv_ScriptName}.lock
	H_MENU=($gv_Configuration \"\" $lv_Backup \"\" $lv_Backup_Sys \"\" $gv_Exit \"\")
else
	H_MENU=($gv_Configuration \"\" $lv_Backup \"\" $gv_Exit \"\")
fi
# Funktion haupt_menue{{{
haupt_menue() {
	menubox "$gv_Mainmenu" "$gv_Menupoint" "$H_MENU"
}
#}}}
##################################################################
#
# Hauptprogramm
#
##################################################################
#
haupt_menue
while [ "$gv_Auswahl" ] ; do
	case $gv_Auswahl in
		HELP*)
			script_help help
			haupt_menue
			;;
		$gv_Configuration)
			# Konfiguration
			# weitere Funktionen laden
			autoload -U kwbackup_conf kwbackup_config
			kwbackup_conf	
			haupt_menue
			;;
		$lv_Backup)
			# normales Backup der angegebenen Verzeichnisse
			autoload -U kwbackup_dirs
			if [ -n "$BACKUP_PATH" ] ; then
				check_backup_dir
				kwbackup_dirs
			else
				no_backup_path_msg
			fi
			haupt_menue
			;;
		$lv_Backup_Sys)
			# Backup der System Verzeichnisse
			autoload -U kwbackup_sys
			if [ -n "$BACKUP_PATH" ] ; then
				check_backup_dir
				kwbackup_sys
			else
				no_backup_path_msg
			fi
			haupt_menue
			;;
		$gv_Exit) break
			;;
	esac
done	
#
# umounten des Backup-Verzeichnis
if [ "$MOUNT_PATH" ] ; then
	mount_check -u $MOUNT_PATH
fi
unset -- gv_Auswahl MOUNT_PATH BACKUP_PATH DIRS BACKUP_PATH
exit 0
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
