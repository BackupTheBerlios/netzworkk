# restrictions_help fuer kwpostfix{{{
TITLE=$(gettext 'Konfiguration::restrictions::Hilfe')
MSG=$(gettext 'check_{client,helo,recipient,sender}_access typ:mapname:
\tPruefen, ob die Absender-, Empfaenger-, Hostname- bzw. die
\tHelo Angabe in einer access Tabelle mit einem OK oder REJECT
\tbelegt ist. Im Normalfall erlaubt Postfix jede dieser An-
\tgaben. Ueber eine access Tabelle lassen sich gezielt einzelne
\tAdressen oder Hosts blocken.

check_{helo,recipient,sender}_mx_access typ:mabname:
\tPruefen, ob der MX-Record der Domain des Clientnamens bzw.
\tder Absender-/Empfaengerdomain in der access-table mit
\teinem REJECT oder DUNNO belegt ist (ein OK ist aus
\tSicherheitsgruenden nicht erlaubt).

check_{helo,recipient,sender}_ns_access typ:mabname:
\tPruefen, ob der Nameserver der Domain des Clientnamens bzw.
\tder Absender-/Empfaengerdomain in der access-table mit
\teinem REJECT oder DUNNO belegt ist (ein OK ist aus
\tSicherheitsgruenden nicht erlaubt).

defer: Verschiebt die Abfrage der Ueberpruefung. Dies sagt dem
\tClient versuche es spaeter nochmal, z.B. wenn
\tdie Mailbox gesperrt/ueberfuellt/offline ist. Es wird
\tdanach explizit die Standard Pruefungsroutine benutzt.

defer_if_permit: Verschiebt die Abfrage, falls einige spaetere
\tRestrictions in eine explizite oder mit eingeschlossene
\tPERMIT Aktion enden. Dies ist nuetzlich, falls ein
\tBlacklist Eintrag fehlt und zu einem Temporaeren
\tFehler fuehrt. 

defer_if_reject: Verschiebt die Abfrage, falls einige spaetere
\tRestrictions in einer REJECT Aktion enden. Dies ist 
\tnuetzlich, falls ein Whitelist Eintrag fehlt und zu einem
\tTemporaeren Fehler fuehrt.

permit: Liefert generell ein Ok und beendet die Pruefung.

permit_auth_destination: liefert ein OK, wenn
\tdie Zieladresse in $relay_domins vorkommt oder Postfix die
\tEnd Adresse fuer diese Domain ist, also die Domain in
\t$mydestination, $inet_interfaces oder $virtual_maps
\tvorkommt.

\tDer Hostname wird hier ignoriert!

permit_mx_backup: Die Mail wird akzeptiert, wenn ein MX-Record der
\tEmpfaengerdomain auf unseren Mailserver zeigt. Unser Postfix
\tmuss dabei nicht unbedingt der eigentliche Zielrechner sein,
\ter kann auch lediglich als Backup Relay fungieren und die 
\tAufgabe haben, die Mails an den eigentlichen Ziel-Mailserver
\tzuzustellen. Im Normalfall wuerde Postfix diese Aufgabe aber
\tverweigern, wenn der Ziel-Mailserver ausserhalb unsereres IP
\tNetzes liegt und Postfix damit ein Open Relay waere.

permit_mynetworks: Mail wird akzeptiert, wenn der Client innerhalb des
\teigenen Netzes liegt, das ueber die Variable $mynetworks
\tdefiniert ist. Dieser Parameter ist sehr wichtig, ihm kommt
\teine entscheidende Rolle zu: Im Normalfall nehmen wir ja nur
\tMails an, fuer die wir

\tdas Ziel sind ($mydestination)
\tein MX-Relay sind (permit_mx_backup)
\tein definiertes Relay sind ($relay_domins).

\tUeber permit_mynetworks aber nehmen wir von den freige-
\tschalteten IP-Nummern Mails auch dann an, wenn der Empfaenger
\tausserhalb unseres eigenen Netzes liegt. Ueblicherweise wollen
\twir dies eigentlich nicht, denn anderfalls waeren wir ein
\tOpen-Relay. Fuer unser lokales Netz aber stellt ja gerade
\tdieser Server den zustaendigen Mailserver fuer ausgehende
\tMails dar, bei dem die Clients einliefern sollen. Hosts aus
\tdem lokalen Netz es eben gerade doch erlaubt sein, Mails an
\texterne Mailadressen einzuliefern. Und diese Ausnahmeregelung
\twird ueber permit_mynetworks erlaubt.

permit_naked_ip_adress: Liefert ein REJECT, wenn nach dem HELO/EHLO
\tKommando nur eine nackte IP-Nummer angegebenen wurde und
\tdiese nicht wie vorgeschrieben in Klammern ([]) gesetzt ist.
\tSollte man eher nicht aktivieren, einige Mailclients erzeugen
\tderart defekte HELO Kommandos.

permit_sasl_authenticated: Erlaubt SMTP-Auth, sofern die User aus
\teinem fremden DUL-Bereich (Dialup User List) kommen. Wird
\tbei dynamischen IPs benutzt (Internet Service Provider).

permit_tls_all_clientcerts: Erlaubt Mails, falls das entfernte
\tSMTP-Client Zertrifikat bei der Ueberpruefung in Ordnung
\tist (man 5 postconf).

permit_tls_clientcerts: Erlaubt Mails, falls das entfernte
\tSMTP-Client Zertrifikat bei der Ueberpruefung in Ordnung
\tist und der Fingerprint des Zertrifikats in
\t"$relay_clientcerts" gelistet ist.

reject: Liefert generell ein Reject und beendet die Pruefung.

reject_authenticated_sender_login_mismatch: Enforces the
\treject_sender_login_mismatch restriction for authenticated
\tclients only.

reject_invalid_hostname: Liefert ein REJECT, wenn nach dem HELO/EHLO
\tKommando ein Hostname in einer ungueltigen Syntax
\tangegebenen wird (Umlaute, Sonderzeichen, Leerzeichen).

reject_multi_recipient_bounce: Reject the request when the envelope
\tsender is the null address, and the message has  multiple
\tenvelope recipients. Although this usage is technically
\tallowed, it seems to have no legitimate application..

reject_non_fqdn_{hostname,recipient,sender},
reject_non_fqdn_hostname: Blockt die Adresse, wenn Sie kein Fully
\tQualified Domain Name (FQDN) ist. Das ist dann der Fall,
\twenn Sie nur aus einem Hostnamen, nicht aber aus einem Host-
\tnamen und einer Domain besteht. Eine solche Adresse wird
\tzwar i.d.R. auch nicht ueber einen A- oder MX-Record verfuegen,
\tda es sich ja eben nicht um einen normal aufloesende Domain
\thandelt, doch ist es sinnvoll diese Pruefungen vorzunehmen:
\tGibt der einliefernde Hoast eine Adresse mit einem in der
\teigenen Domain vorhandenen Host (Bsp. www), so besteht die
\tGefahr das das lokale DNS diesen blanken Hostnamen durch
\tanhaengen der eigenen Domain aufloest - uns ploetzlich zu
\teinem gueltigen A- oder MX-Record kommt.

reject_rbl_client: Liefert ein REJECT, wenn der Hostname/Domain des
\tClients ein Realtime Blacklisted Host ist. Es koennen
\tmehrere Domains angegebenen werden, die abgefragt werden
\tsollen (Bsp. relays.ordb.org, list.dsbl.org) 

reject_rhsbl_client: Liefert ein REJECT, wenn der Hostname/Domain
\tdes Clients ein Right-Hand Side Blacklisted Host ist. Es
\tkoennen mehrere Domains angegebenen werden, die abgefragt
\twerden sollen (Bsp. blackhole.securitysage.com).

reject_rhsbl_recipient: Liefert ein REJECT, wenn der Hostname/Domain
\tdes Empfaengers ein Right-Hand Side Blacklisted Host ist. Es
\tkoennen mehrere Domains angegebenen werden, die abgefragt
\twerden sollen (Bsp. blackhole.securitysage.com).

reject_rhsbl_sender: Liefert ein REJECT, wenn der Hostname/Domain
\tdes Absenders ein Right-Hand Side Blacklisted Host ist. Es
\tkoennen mehrere Domains angegebenen werden, die abgefragt
\twerden sollen (Bsp. blackhole.securitysage.com).

reject_sender_login_mismatch: Reject the request when 
\t$smtpd_sender_login_maps specifies an owner for the MAIL
\tFROM address, but the client is not (SASL) logged in as
\tthat MAIL FROM address owner; or when the client is (SASL)
\tlogged in, but the client login name does not own the MAIL
\tFROM address according to $smtpd_sender_login_maps.

reject_unauth_destination: Liefert ein REJECT, solange nicht
\tdie Zieladresse in $relay_domins vorkommt oder
\tPostfix Final Destination fuer diese Domain ist, also die
\tDomain in $mydestination,$inet_interfaces oder $virtual_maps
\tvorkommt.

\tTrifft beides nicht zu, liefert die Pruefung REJECT, d.h., die
\tPruefung wird beendet und die Mail abgelehnt. Bei
\tpermit_auth_destination wuerde hingegen weiter geprueft werden,
\tob noch ein anderer Punkt ein OK liefern wuerde!

reject_unauth_pipelining: Manche Spam Software sendet SMTP
\tKommandos, ohne die Return Codes des Mailservers abzuwarten.
\tDas soll Zeit sparen. Grundsaetzlich ist ein solches Ver-
\thalten legitim, unter dem Namen Command Pipelining koennen
\tsich Server darauf einigen, dass Sie dies zulassen. Postfix
\tbietet hier an, Clients zu blocken die Command Pipelining
\tdurchfuehren, ohne sich vorher vergewissert zu haben, ob
\tPostfix das erlaubt.

reject_unauthenticated_sender_login_mismatch: Enforces the
\treject_sender_login_mismatch restriction for unauthenticated
\tclients only. 

reject_unknown_client: Liefert ein REJECT, wenn fuer den Client im
\tDNS kein PTR, alsa kein Name zur IP Nummer gesetzt ist.

reject_unknown_{recipient,sender}_domain, reject_unknown_hostname:
\tBlocken die Mail, wenn die Empfaenger- bzw.
\tAbsenderadresse im DNS weder ueber einen A-, noch ueber einen
\tMX-Record verfuegt, d. h., wenn an die angegebene Mailadresse
\tkeine Mail zugestellt werden kann; das macht Sie verdaechtig.

reject_unlisted_sender: Reject the request when the MAIL FROM address
\tis not listed in the list of valid recipients for its domain
\tclass. See the smtpd_reject_unlisted_sender parameter
\tdescription for details..

reject_unverified_{sender,recipient}: Blockt Mails, wenn die
\tAbsender- oder Empfaengeradresse nicht bekannt ist.
\tPostfix prueft, ob und wie die Adresse in der lookup-
\tTabelle bekannt ist und damit umgegangen werden soll.
\t(Bsp. Whitelist, hash:/etc/postfix/check_sender_access)
\tWenn Sie ein warn_if_reject voranstellen werden die geblockten
\tMails geloggt.

warn_if_reject: Wuerde die nachfolgende Pruefung ein Reject liefern,
\taendert dieser Parameter das Verhalten von Postfix. Statt
\tmit einem Reject aus der Pruefung auszusteigen, wird nur ein
\tLog Eintrag erzeugt und weiter in der Pruefung fortgefahren.
\tDamit lassen sich Konfigurationaenderungen leicht testen, ohne
\tden Verlust von Mails riskieren zu muessen.')
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
