# Funktion (manage_export_pem), managed das exportieren ins# {{{
# PEM Format.
#
manage_export_pem() {
	#
	if [[ ${#argv} == 2 ]] && [[ -f $1 ]] ; then
		# Export Dateiname und FORMAT erst einmal festlegen
		export_filename_format "$1" "$2"
		#
		# Funktion (export_pem_menu)# {{{
		#
		# Variablen
		lv_KeyAdd=$(gettext 'Schluessel hinzufuegen')
		lv_Fingerprint_Add=$(gettext 'Fingerabdruck hinzufuegen')
		KEY_VALUE="$gv_No"
		FINGERPRINT_VALUE="$gv_No"
		#
		export_pem_menu() {
			if [[ $ExportName == crl.pem ]] ; then
				EXPORT_PEM_MENU=(\"$lv_ExportFilename\" \"$Export_FileName\"
				\"$lv_Ssl_CA_Password\" \"$CA_CAPASSWORD\"
				$lv_Ssl_Validity \"$DEFAULT_REVOKE_DAYS\"
				$gv_Create \"\" $gv_Back \"\")
			else
				EXPORT_PEM_MENU=(\"$lv_ExportFilename\" \"$Export_FileName\"
				\"$lv_KeyAdd\" \"$KEY_VALUE\"
				\"$lv_Fingerprint_Add\" \"$FINGERPRINT_VALUE\"
				$gv_Create \"\" $gv_Back \"\")
			fi
			#
			if [[ ${#argv} == 1 ]] ; then
				menubox -d "$1" "$CERT_EXPORT_TITLE" "$gv_Menupoint" "$EXPORT_PEM_MENU"
			else
				menubox "$CERT_EXPORT_TITLE" "$gv_Menupoint" "$EXPORT_PEM_MENU"
			fi
		}
		## }}}
		export_pem_menu
		while [ "$gv_Auswahl" ] ; do
			case $gv_Auswahl in
				HELP*)
		    	    # Hilfe Messagebox
					script_help export_pem_help
					export_pem_menu
					;;
				"$lv_ExportFilename")
					# Dateiname fuer den Export eingaben# {{{
					export_filename $FORMAT
					## }}}
					export_pem_menu $lv_ExportFilename
					;;
				$lv_Ssl_CA_Password)
					# CA Passwort eingeben
					ca_passwd_input
					export_most_menu $lv_Ssl_CA_Password
					;;
				$lv_Ssl_Validity)
					# Gueltigkeitseingabe
					revoke_days_input
					export_most_menu $lv_Ssl_Validity
					;;
				"$lv_KeyAdd")
					# Schluessel hinzufuegen (yes/no)# {{{
					KEY_MSG=$(gettext 'Schluessel hinzufuegen (ja/nein).')
					yesno "$CERT_EXPORT_TITLE" "$KEY_MSG"
					if [ "$?" = 0 ] ; then
						KEY_VALUE="$gv_Yes"
					else
						KEY_VALUE="$gv_No"
					fi
					## }}}
					export_pem_menu $lv_KeyAdd
					;;
				"$lv_Fingerprint_Add")
					# Fingerabdruck hinzufuegen (yes/no)# {{{
					FINGERPRINT_MSG=$(gettext 'Fingerabdruck hinzufuegen (ja/nein).')
					yesno "$CERT_EXPORT_TITLE" "$FINGERPRINT_MSG"
					if [ "$?" = 0 ] ; then
						FINGERPRINT_VALUE="$gv_Yes"
					else
						FINGERPRINT_VALUE="$gv_No"
					fi
					## }}}
					export_pem_menu $lv_Fingerprint_Add
					;;
				$gv_Create)
					# exportieren# {{{
					if [[ $ExportName == crl.pem ]] ; then
						cd $KWSSL_DIR
						if [[ -n $Export_FileName ]] && \
							[[ -n $CA_CAPASSWD ]] && \
							[[ -n $DEFAULT_REVOKE_DAYS ]] ; then
							# ertsmal ./tmp loeschen
							rm -rf tmp &>/dev/null
							# ./tmp erstellen
							create_file -d tmp
							#
							openssl ca -gencrl -config $KWSSL2RC \
								-out ./tmp/${ExportName} \
								-passin pass:${CA_CAPASSWD} \
								-crldays $DEFAULT_REVOKE_DAYS || prog_failure
							openssl crl -in ./tmp/${ExportName} \
								-outform PEM -out "$Export_FileName" || prog_failure
							#
							unset -- CA_CAPASSWD CA_CAPASSWORD
							break
						else
							failed_entry_msg
							export_most_menu
						fi
					else
						cd ${KWSSL_DIR}/${CA_OPEN_NAME}
						check_ca_filenames
						# Fingerprint und Schluessel mit hinzufuegen
						if [ "$FINGERPRINT_VALUE" = "$gv_Yes" -a "$KEY_VALUE" = "$gv_Yes" ] ; then
							fingerprint "$CACERT" "$Export_FileName"
							< $CACERT >> "$Export_FileName" &>/dev/null
							echo "" >> "$Export_FileName" &>/dev/null
							< $CAKEY >> "$Export_FileName" &>/dev/null
						# Schluessel mit hinzufuegen
						elif [ "$FINGERPRINT_VALUE" = "$gv_No" -a "$KEY_VALUE" = "$gv_Yes" ] ; then
							< $CACERT > "$Export_FileName" &>/dev/null
							echo "" >> "$Export_FileName" &>/dev/null
							< $CAKEY >> "$Export_FileName" &>/dev/null
						# Fingerprint mit hinzufuegen
						elif [ "$FINGERPRINT_VALUE" = "$gv_Yes" -a "$KEY_VALUE" = "$gv_No" ] ; then
							fingerprint "$CACERT" "$Export_FileName"
							< $CACERT >> "$Export_FileName" &>/dev/null
						# nur Zertifikat hinzufuegen
						else
							< $CACERT > "$Export_FileName" &>/dev/null
						fi
						break
					fi
					## }}}
					;;
				$gv_Back)
					# Abbrechen
					break
					;;
			esac
		done
	else
		no_para_msg $0
	fi
}
# }}}
