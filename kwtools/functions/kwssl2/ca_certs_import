# Funktion (ca_certs_import), import CAs und Zertifikate# {{{
#
# usage: ca_certs_import
#
ca_certs_import() {
	# Variablen# {{{
	lv_Ssl_Priv_Pass=$(gettext 'privater Schluessel (Passwort)')
	lv_Ca_Cert=$(gettext 'CA Zertifikat')
	lv_Priv_Key=$(gettext 'privater CA Schluessel')
	lv_Index_File=$(gettext 'openssl index Datei')
	lv_Certs_Dir=$(gettext 'Verzeichnis mit Zertifikaten')
	## }}}
	# Funktion (import_menu)# {{{
	#
	IMPORT_TITLE="${SUBDIR}::${lv_CA}::${lv_CA_Import}"
	#
	import_menu() {
		IMPORT_MENU=(\"$lv_Ssl_Priv_Pass\" \"$PRIV_PASSWORD\"
		\"$lv_Ssl_Name\" \"$NEW_CA_NAME\"
		\"$lv_CA_Password\" \"$PASSWORD\"
		\"$lv_Ssl_Password_Generate\" \"\"
		\"$lv_Ca_Cert\" \"$CACERT_FILE\"
		\"$lv_Priv_Key\" \"$PRIV_KEY\"
		\"$lv_Index_File\" \"$INDEX_FILE\"
		\"$lv_Certs_Dir\" \"$CERTS_DIR\"
		$gv_Create \"\" $gv_Back \"\")
		if [[ ${#argv} == 1 ]] ; then
			menubox -d "$1" "$IMPORT_TITLE" "$gv_Menupoint" "$IMPORT_MENU"
		else
			menubox "$IMPORT_TITLE" "$gv_Menupoint" "$IMPORT_MENU"
		fi
	}
	## }}}
	import_menu
	while [ -n "$gv_Auswahl" ] ; do
		case "$gv_Auswahl" in
			HELP*)
				script_help ca_certs_import_help
				import_menu
				;;
			"$lv_Ssl_Priv_Pass")
				# Password des privaten Schluessel eingeben# {{{
				PRIV_PASS_MSG=$(gettext 'Geben Sie das Passwort des privaten Schluessels ein.')
				password "$lv_Ssl_Priv_Pass" "$PRIV_PASS_MSG" "$PASSWD_LENGTH"
				if [ -n "$PASSPHRASE" ] ; then
					password_display "$PASSPHRASE"
					if [ -n "$gv_Star_Passphrase" ] ; then
						PRIV_PASSWORD="$gv_Star_Passphrase"
						PRIVPASSWD="$PASSPHRASE"
						unset -- PASSPHRASE
					else
						unset -- PRIVPASSWD PASSPHRASE
					fi
				else
					unset -- PRIVPASSWD PASSPHRASE
				fi
				## }}}
				import_menu $lv_Ssl_Priv_Pass
				;;
			$lv_Ssl_Name)
				# Name fuer lokale Speicherung eingeben.# {{{
				##################################
				# TODO:
				# RootCA = SubCA
				# SubCA = Certs
				# SubCa oder Certs, RootCA oder SubCA, bla bla?
				##################################
				inputbox "$lv_Ssl_Name" "$SAVE_MSG" "$NEW_CA_NAME"
set -x
				if [ -n "$gv_Auswahl" ] ; then
					if [ ! -d "${KWSSL_DIR}/${gv_Auswahl}" ] ; then
						# dementsprechende Variablen fuer die SubCA belegen
						NEW_CA_NAME="$gv_Auswahl"
					else
						unset -- NEW_CA_NAME
set +x
						subca_existed_msg
					fi
				else
					unset -- NEW_CA_NAME
				fi
set +x
				## }}}
				import_menu $lv_Ssl_Name
				;;
			"$lv_CA_Password")
				# Passphrase eingeben# {{{
				PASSWD_MSG=$(gettext 'Geben Sie bitte eine neue Passphrase fuer die CA ein (mindestens $PASSWD_LENGTH Zeichen lang) die importiert werden soll und wiederholen diese im Feld darunter.')
				mixed_password "$gv_Passwd_TITLE" "$PASSWD_MSG" "$PASSWD_LENGTH"
				if [[ -n $gv_Pass ]] ; then
					password_display "$gv_Pass"
					if [ -n "$gv_Star_Passphrase" ] ; then
						PASSWORD="$gv_Star_Passphrase"
						CA_NEW_PASSWD="$gv_Pass"
						unset -- gv_Pass
					else
						unset -- PASSWORD gv_Pass
					fi
				else
					unset -- PASSWORD CA_NEW_PASSWD gv_Pass
				fi
				## }}}
				import_menu $lv_CA_Password
				;;
			"$lv_Ssl_Password_Generate")
				# Passord generieren# {{{
				# Standard Passphrasen Laenge ist 10 Zeichen lang
				# wenn keine Passphrase manuell eingegeben wurde.
				gv_Pass=${${${(ws: :)$(head -c 256 /dev/urandom | uuencode -m -)}[4]}[1,$PASSWD_LENGTH]}
				if [[ -n $gv_Pass ]] ; then
					PASSWORD="$gv_Pass"
					CA_NEW_PASSWD="$gv_Pass"
					unset -- gv_Pass
				fi
				## }}}
				import_menu $lv_CA_Password
				;;
			"$lv_Ca_Cert")
				# CA Zertifikat auswaehlen# {{{
				FORMAT="SSLCACERT"
				SUFFIX=".pem"
				file_choice "$CERTS_DIR" only "$CACERT_FILE"
				if [ -n "$WERT" ] ; then
					CACERT_FILE="${VERZ}/${gv_Auswahl}"
				else
					unset -- CACERT_FILE
				fi
				## }}}
				import_menu $lv_Ca_Cert
				;;
			"$lv_Priv_Key")
				# privaten Schluessel auswaehlen# {{{
				FORMAT="SSLPRIVKEY"
				SUFFIX=".pem .key"
				file_choice "$CERTS_DIR" only "$PRIV_KEY"
				if [ -n "$WERT" ] ; then
					PRIV_KEY="${VERZ}/${gv_Auswahl}"
				else
					unset -- PRIV_KEY
				fi
				## }}}
				import_menu $lv_Priv_Key
				;;
			"$lv_Index_File")
				# index.txt Datei auswaehlen# {{{
				FORMAT="text"
				SUFFIX=".txt"
				file_choice "$CERTS_DIR" only "$INDEX_FILE"
				if [ -n "$WERT" ] ; then
					INDEX_FILE="${VERZ}/${gv_Auswahl}"
				else
					unset -- INDEX_FILE
				fi
				## }}}
				import_menu $lv_Index_File
				;;
			"$lv_Certs_Dir")
				# Verzeichnis mit Zertifikaten auswaehlen# {{{
				dselect "$CERTS_DIR"
				if [ -n "$VERZ" ] ; then
					dselect_check "$VERZ"
					if [ -n "$VERZ" ] ; then
						CERTS_DIR="$VERZ"
					else
						unset -- CERTS_DIR
					fi
				else
					unset -- CERTS_DIR
				fi
				## }}}
				import_menu $lv_Certs_Dir
				;;
			$gv_Create)
				# importieren# {{{
				###################################
				# TODO:
				# hier gehts weiter
				# CACERT_FILE nach BasicConstraits durchsuchen
				# Dateien ins richtige Format bringen (der->pem) ?
				#
				###################################
				set -x
				if [[ -n $PRIV_PASSWORD ]] && \
					[[ -n $NEW_CA_NAME ]] && \
					[[ -n $CA_NEW_PASSWD ]] && \
					[[ -n $CACERT_FILE ]] && \
					[[ -n $PRIV_KEY ]] ; then
					# openssl
					# create_file -d "$CA_NAME"
				set +x
					unset -- PRIVPASSWD PRIV_PASSWORD CA_NEW_PASSWD
					break
				else
				set +x
					############################################
					# TODO:
					# So in Ordnung? check
					############################################
					MSG=$(gettext 'Sie muessen mindestens die Menuepunkte $lv_Ssl_Priv_Pass, $lv_Ssl_Name, $lv_Ssl_Password, $lv_Ca_Cert, $lv_Priv_Key mit Werten belegen.')
					msgbox "$gv_Info" "$MSG"
					import_menu
				fi
				set +x
				## }}}
				;;
			$gv_Back)	# abbrechen
				unset -- PRIVPASSWD PRIV_PASSWORD CA_NEW_PASSWD
				break
				;;
		esac
	done
}
## }}}
