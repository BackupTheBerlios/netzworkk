# Funktion für alle *canonical*-Tabellen{{{
#
canonical_table() {
	FILE="$1"
	autoload -U no_adr_and_adr_msg
# funktion canonical_menue{{{
#
canonical_menue() {
	CANONICAL_MENU=$(gettext 'Adresse "$ADR" Empfaenger "$E_ADR" $gv_Save "" $gv_Back ""')
	menubox "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CANONICAL_MENU"
}
#}}}
# Funktion canonical_aendern{{{
#
canonical_aendern() {
	canonical_menue
	while [ "$gv_Auswahl" ] ; do
		case "$gv_Auswahl"  in
			HELP*)	script_help "$TAB_HELP"
				canonical_menue
				;;
			Adr*)
				# Adresse eingeben (Mailadresse, Domain, user){{{
				FIRST_ADR_MSG=$(gettext 'Geben Sie hier bitte eine Mailadresse, User oder eine domain ein (Bsp. user | @domain.de | user@domain.de).')
				inputbox "TABLE_TITLE" "$FIRST_ADR_MSG" "$ADR"
				if [ "$gv_Auswahl" ] ; then
					# Eingabe überprüfen
					case "$gv_Auswahl" in
						@*.*)	ADR="$gv_Auswahl"
							;;
						[a-z,A-Z,0-9]*@*.*)	ADR="$gv_Auswahl"
							;;
						[a-z,A-Z,0-9]*!@*)	ADR="$gv_Auswahl"
							;;
						*)
							unset -- ADR
							no_input_msg
							;;
					esac
				else
					no_input_msg
				fi
				#}}}
				canonical_menue
				;;
			Em*|Re*)
				# andere Adresse eingeben (Mailadresse, Domain){{{
				OTHER_ADR_MSG=$(gettext 'Geben Sie hier bitte eine Mailadresse oder domain ein (Bsp. @domain.de | user@domain.de).')
				inputbox "TABLE_TITLE" "$OTHER_ADR_MSG" "$E_ADR"
				if [ "$gv_Auswahl" ] ; then
					# Eingabe überprüfen
					case "$gv_Auswahl" in
						@*.*)	E_ADR="$gv_Auswahl"
							;;
						*@*.*)	E_ADR="$gv_Auswahl"
							;;
						*)	
							no_input_msg
							;;
					esac
				else
					no_input_msg
				fi
				#}}}
				canonical_menue
				;;
			$gv_Save)
				# Einstellungen speichern{{{
				if [ "$ADR" -a "$E_ADR" ] ; then
					if [ "$AENDERN_ADR" ] ; then
						sed -e "s#^${AENDERN_ADR}.*${AENDERN_ADR1}#${ADR}	${E_ADR}#" $FILE >$FILE$$
						mv $FILE$$ $FILE
					else
						grep -v "^${ADR}[[:space:]]" $FILE >$FILE$$
						>> $FILE$$ <<< "$ADR	$E_ADR"
						mv $FILE$$ $FILE
					fi
				else
					no_adr_and_adr_msg
				fi
				#}}}
				break
				;;
			$gv_Back)	break
				;;
		esac
	done
}
#}}}
tabellen_menue
while [ "$gv_Auswahl" ] ; do
	case "$gv_Auswahl" in
		HELP*)	script_help tab_help
			tabellen_menue
			;;
		$gv_Display)
			# Ansicht der Einträge
			tab_ansicht
			tabellen_menue
			;;
		$gv_Create)
			# Werte anlegen
			unset -- ADR E_ADR AENDERN_ADR AENDERN_ADR1
			canonical_aendern
			tabellen_menue
			;;
		$gv_Change)
			# Einträge verändern{{{
			key_value "$FILE"
			if [ "$AUSWAHL" ] ; then
				CHANGE_MENU=($AUSWAHL)
				menubox "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
				while [ "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help tab_wert_help
							menubox "$TABLE_TITLE" "$TABLE_ENTRY_MSG" "$CHANGE_MENU"
							;;
						*)
							# Auswahl verändern
							print "$gv_Auswahl" | \
							while read ADRESSE REST ; do
								ADR="$ADRESSE"
								E_ADR="$REST"
							done
							AENDERN_ADR="$ADR"
							AENDERN_ADR1="$E_ADR"
							#
							canonical_aendern
							break
							;;
					esac
				done
			else
				no_entry_msg
			fi
			#}}}
			tabellen_menue
			;;
		$gv_Delete)
			# Einträge löschen{{{
			key_value "$FILE"
			if [ "$AUSWAHL_MULTI" ] ; then
				DEL_MENU=($AUSWAHL_MULTI)
				U_OPT=no
				checklist "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
				while [ "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help kwpostfix_del_help
							U_OPT=no
							checklist "$TABLE_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
							;;	
						*)	# Löschen
							while read ADRESS ; do
								grep -v "^${ADRESS// /.*}" $FILE >$FILE$$
								mv $FILE$$ $FILE
							done < $gv_LogFile$$
							break
							;;
					esac
				done
			else
				no_entry_msg
			fi
			#}}}
			tabellen_menue
			;;
		D*)	
			# Datenbank neu einlesen
			db_new_reread "$WAS_IST" "$FILE"
			break
			;;
		$gv_Back)	break
			;;
	esac
done
}
#}}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
