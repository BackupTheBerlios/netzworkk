# Funktion kwrsynctab_conf zum eingeben der Konfiguration#{{{
# um verschiedene Verzeichnisse mit verschiedenen Rechnern
# zu synchronisieren.
#
# usage: kwrsynctab_conf
#
kwrsynctab_conf() {
DIR_TITLE=($lv_Directories)
DIR_MENU=($gv_Display \"\" $gv_Create \"\" $gv_Change \"\" $gv_Delete \"\" $gv_Back \"\")
# Funktion net_conf ausfuehren
net_conf
# Funktion manage_dir_menu# {{{
#
manage_dir_menu() {
	menubox "$DIR_TITLE" "$gv_Menupoint" "$DIR_MENU"
}
## }}}
# Funktion kwrsync_conf_choice# {{{
#
kwrsynctab_conf_choice() {
	lv_Exclude=$(gettext 'Ausschluss')
	lv_Source_Dir=$(gettext 'Sourceverz.')
	lv_Remote_Dir=$(gettext 'Remoteverz.')
	#
	# Funktion kwrsynctab_menue{{{
	#
	# usage: kwrsynctab_menue
	CONF_TITLE=(${lv_Directories}::${gv_Configuration})
	kwrsynctab_menue() {
		RSYNC_RSH="${RSYNC_RSH:--}"
		CONF_MENU=($lv_Source_Dir \"$S_VERZ\" $lv_Remote_Dir \"$R_VERZ\"
		$lv_Remote_Host \"$REMOTE_HOST\" $lv_Remote_Shell \"$RSYNC_RSH\"
		$lv_Exclude \"$DIR_EXCLUDE\" $gv_Save \"\" $gv_Back \"\")
		if [[ ${#argv} == 1 ]] ; then
			menubox -d "$1" "$CONF_TITLE" "$gv_Menupoint" "$CONF_MENU"
		else
			menubox "$CONF_TITLE" "$gv_Menupoint" "$CONF_MENU"
		fi
	}
	#}}}
	kwrsynctab_menue
	while [ -n "$gv_Auswahl" ] ; do
		case $gv_Auswahl in
			HELP*)	script_help kwrsynctab_conf_help
				kwrsynctab_menue
				;;
			$lv_Source_Dir)
				# Quellverzeichnis auswaehlen{{{
				dselect "$S_VERZ"
				if [ "$VERZ" ] ; then
					dselect_check "$VERZ"
					if [ -n "$VERZ" ] ; then
						user_device_check "$VERZ" AE
						S_VERZ="$VERZ"
					fi
				fi
				#}}}
				kwrsynctab_menue $lv_Source_Dir
				;;
			$lv_Remote_Dir)
				# entferntes Verzeichnis eingeben{{{
				R_DIR_TITLE=(${gv_Configuration}::${lv_Remote_Dir})
				R_DIR_MSG=$(gettext 'Geben Sie bitte das Zielverzeichnis ein.')
				inputbox "$R_DIR_TITLE" "$R_DIR_MSG" "$R_VERZ"
				# Ist gv_Auswahl groesser als einn Zeichen
				# wird der letzte / abgetrennt.
				if [ "${#gv_Auswahl}" = 1 ] ; then
					R_VERZ="$gv_Auswahl"
				elif [ "${#gv_Auswahl}" -gt 1 ] ; then
					R_VERZ="${gv_Auswahl%/}"
				else
					no_input_msg
				fi
				#}}}
				kwrsynctab_menue $lv_Remote_Dir
				;;
			$lv_Remote_Host)
				# Zielrechner eingeben{{{
				R_HOST_TITLE=($gv_Configuration}::${lv_Remote_Host})
				R_HOST_MSG=$(gettext 'Geben Sie bitte die/den Namen oder IP(s) der/des Zielrechner(s) ein.')
				conf_hostname -a "$R_HOST_MSG" "${REMOTE_HOST:-$R_HOST}"
				if [ "$gv_Auswahl" ] ; then
					REMOTE_HOST="$gv_Auswahl"
				else
					unset -- REMOTE_HOST
				fi
				#}}}
				kwrsynctab_menue $lv_Remote_Host
				;;
			$lv_Remote_Shell)
				# Standard Transport Auswahl{{{
				remote_sh
				if [ "${R_SHELL[1]}" ] ; then
					REMOTE_TITLE=(${gv_Configuration}::${lv_Remote_Shell})
					REMOTE_MSG=$(gettext 'Waehlen Sie ihre Remote Shell aus.')
					menubox "$REMOTE_TITLE" "$REMOTE_MSG" "$R_SHELL"
					while [ "$gv_Auswahl" ] ; do
						case "$gv_Auswahl" in
							HELP*)	script_help share/remote_shell_help
								menubox "$REMOTE_TITLE" "$REMOTE_MSG" "$R_SHELL"
								;;
							*)	RSYNC_RSH="$gv_Auswahl"
								break
								;;
						esac
					done
				else
					RSYNC_RSH=-
					no_remote_shell_msg
				fi
				#}}}
				kwrsynctab_menue $lv_Remote_Shell
				;;
			$lv_Exclude)
				# Verzeichnisse/Dateien ausschliessen# {{{
				EXCLUDE_TITLE=(${gv_Configuration}::${lv_Exclude})
				EXCLUDE_MSG=$(gettext 'Geben Sie die Verzeichnisse/Dateien mit relativen Pfad an die ausgeschlossen werden sollen.')
				inputbox "$EXCLUDE_TITLE" "$EXCLUDE_MSG" "${DIR_EXCLUDE:-$S_VERZ}"
				# Ist gv_Auswahl groesser als ein Zeichen
				# wird der letzte / abgetrennt.
				if [ -n "$gv_Auswahl" ] ; then
					DIR_EXCLUDE="$gv_Auswahl"
				else
					unset -- DIR_EXCLUDE
					no_input_msg
				fi
				## }}}
				kwrsynctab_menue $lv_Exclude
				;;
			$gv_Save)
				# speichern# {{{
				if [ -n "$S_VERZ" -a -n "$R_VERZ" -a -n "$REMOTE_HOST" ] ; then
					if [ "$CHANGE" = yes ] ; then
						print -l ${(R)${(R)${(f)"$(< $KWRSYNCTAB)"}##(s#)(\#)*}##${KWRSYNCTAB_OLD}*} > ${gv_WorkDir}/kwrsynctab
						mv ${gv_WorkDir}/kwrsynctab $KWRSYNCTAB
					fi
					setopt shwordsplit
					# IFS=Tab
					IFS=$'\t'
					if [ "`wc -c < $KWRSYNCTAB`" -gt 1 ] ; then
						>> "$KWRSYNCTAB" <<< "${S_VERZ}${IFS}${R_VERZ}${IFS}${RSYNC_RSH:--}${IFS}${REMOTE_HOST}${IFS}${DIR_EXCLUDE:--}"
					else
						> "$KWRSYNCTAB" <<< "${S_VERZ}${IFS}${R_VERZ}${IFS}${RSYNC_RSH:--}${IFS}${REMOTE_HOST}${IFS}${DIR_EXCLUDE:--}"
					fi
					# IFS=Space
					IFS=$'\ '
					unsetopt shwordsplit
					break
				else
					MSG=$(gettext 'Sie muessen mindestens die Menuepunkte Sourceverz., Remoteverz. und Zielrechner mit Werten belegen.')
					msgbox "$gv_Attention" "$MSG"
					kwrsynctab_menue
				fi
				## }}}
				;;
			$gv_Back)	break
				;;
		esac
	done
}
## }}}
# Funktion read_tab_entry# {{{
#
read_tab_entry() {
	unset -- S_VERZ R_VERZ RSYNC_RSH REMOTE_HOST DIR_EXCLUDE KwrsynctabListe Kwrsync_Change_List Kwrsync_Change_List_Multi
	setopt shwordsplit
	# IFS=Return
	IFS=$'\r'
	#
	read -A KwrsynctabListe <<< "`grep -v "^#" $KWRSYNCTAB | tr "\n" "$IFS"`"
	# IFS=Tab
	IFS=$'\t'
	Anz=1
	Anz1=0
	while [ "${KwrsynctabListe[Anz]}" != "" ] ; do
		set -- ${KwrsynctabListe[Anz]}
		(( Anz1++ ))
		S_VERZ[Anz1]="$1"
		R_VERZ[Anz1]="$2"
		RSYNC_RSH[Anz1]="$3"
		REMOTE_HOST[Anz1]="$4"
		DIR_EXCLUDE[Anz1]="$5"
		(( Anz++ ))
	done
	# IFS=space
	IFS=$'\ '
	unsetopt shwordsplit
	#
	Nr=0
	while [ "$Nr" -lt "$Anz1" ] ; do
		(( Nr++ ))
		Kwrsync_Change_List[Nr]="$Nr \"${S_VERZ[Nr]} ${R_VERZ[Nr]} ${RSYNC_RSH[Nr]} ${REMOTE_HOST[Nr]} ${DIR_EXCLUDE[Nr]}\""
		Kwrsync_Change_List_Multi[Nr]="$Nr \"${S_VERZ[Nr]} ${R_VERZ[Nr]} ${RSYNC_RSH[Nr]} ${REMOTE_HOST[Nr]} ${DIR_EXCLUDE[Nr]}\" off"
	done
}
## }}}
manage_dir_menu
while [ -n "$gv_Auswahl" ] ; do
	case "$gv_Auswahl" in
		HELP*)	script_help kwrsynctab_help
			manage_dir_menu
			;;
		$gv_Display)
			# Ansicht der Konfiguration# {{{
			read_tab_entry
			if [ -n "${S_VERZ[1]}" ] ; then
				> ${gv_WorkDir}/kwrsynctab <<< "<source dir> <remote dir> <shell> <remote host> <exclude>
" 
				# leere und Kommantar Zeilen herausfiltern.
				print -l ${(R)${(f)"$(< $KWRSYNCTAB)"}##(s#)(\#|$)*} >> ${gv_WorkDir}/kwrsynctab
				if [ "`wc -l < $KWRSYNCTAB`" -gt 2 ] ; then
					view_file "${gv_WorkDir}/kwrsynctab"
					rm -rf ${gv_WorkDir}/kwrsynctab &>/dev/null
					#view_file "$KWRSYNCTAB"
				else
					no_entry_msg
				fi
			else
				no_kwrsynctab_msg
			fi
			## }}}
			manage_dir_menu
			;;
		$gv_Create)
			# Konfiguration erstellen
			unset -- REMOTE_HOST R_VERZ S_VERZ DIR_EXCLUDE RSYNC_RSH CHANGE
			kwrsynctab_conf_choice
			manage_dir_menu
			;;
		$gv_Change)
			# Eintraege aendern
			# Funktion kwrsync_change_menu{{{
			CHANGE_TITLE=(${lv_Directories}::${gv_Change})
			CHANGE_MSG=$(gettext 'Waehlen Sie eine Konfiguration zum aendern aus.')
			kwrsync_change_menu() {
				CHANGE_MENU=($Kwrsync_Change_List $gv_Back \"\")
				menubox "$CHANGE_TITLE" "$CHANGE_MSG" "$CHANGE_MENU"
			}
			#}}}
			# Konfiguration veraendern# {{{
			read_tab_entry
			if [ -n "$S_VERZ" ] ; then
				kwrsync_change_menu
				while [ "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help share/conf_change_help
							kwrsync_change_menu
							;;
						$gv_Back)	break
							;;
						*)
							# kwrsynctab Eintrage aendern
							CHANGE=yes
							S_VERZ="${S_VERZ[gv_Auswahl]}"
							R_VERZ="${R_VERZ[gv_Auswahl]}"
							RSYNC_RSH="${RSYNC_RSH[gv_Auswahl]}"
							REMOTE_HOST="${REMOTE_HOST[gv_Auswahl]}"
							DIR_EXCLUDE="${DIR_EXCLUDE[gv_Auswahl]}"
							setopt shwordsplit
							IFS=$'\t'
							KWRSYNCTAB_OLD="${S_VERZ}${IFS}${R_VERZ}${IFS}${RSYNC_RSH}${IFS}${REMOTE_HOST}${IFS}${DIR_EXCLUDE}"
							IFS=$'\ '
							unsetopt shwordsplit
							kwrsynctab_conf_choice
							# kwrsynctab Eintrage neu einlesen
							read_tab_entry
							if [ -n "$KwrsynctabListe" ] ; then
								kwrsync_change_menu
							else
								no_kwrsynctab_msg
							fi
							;;
					esac
				done
			else
				no_kwrsynctab_msg
			fi
			## }}}
			manage_dir_menu
			;;
		$gv_Delete)
			# Funktion kwrsync_delete_menu{{{
			DEL_TITLE=(${lv_Directories}::${gv_Delete})
			kwrsync_delete_menu() {
				DEL_MENU=($Kwrsync_Change_List_Multi)
				checklist "$DEL_TITLE" "$gv_Delete_MSG" "$DEL_MENU"
			}
			#}}}
			# Konfiguration loeschen# {{{
			read_tab_entry
			if [ -n "$Kwrsync_Change_List_Multi" ] ; then
				kwrsync_delete_menu
				while [ -n "$gv_Auswahl" ] ; do
					case "$gv_Auswahl" in
						HELP*)	script_help share/conf_del_help
							kwrsync_delete_menu
							;;
						$gv_Back)	break
							;;
						*)
							# loeschen der Eintrage
							Line="${gv_Auswahl//\ /d ; }d"
							sed -e "$Line" $KWRSYNCTAB > ${gv_WorkDir}/kwrsynctab
							mv ${gv_WorkDir}/kwrsynctab $KWRSYNCTAB
							break
							;;
					esac
				done
			else
				no_kwrsynctab_msg
			fi
			manage_dir_menu
			## }}}
			;;
		$gv_Back)	break
			;;
	esac
done
}
## }}}
### Modeline {{{
### vim:ft=zsh:foldmethod=marker
### vim:set ts=4:                                                                               
### }}}
